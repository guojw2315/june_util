{"version":3,"sources":["../src/common.js"],"names":["formatOfSymbol","num","syb","size","numArr","toString","split","arr","i","length","j","splice","join","common","formatPhone","value","formatMoney","padLeftZero","zeroLen","baseStr","substr"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,GAAxB,EAAkCC,GAAlC,EAA4CC,IAA5C,EAAsD;AAAA,MAA9BF,GAA8B;AAA9BA,IAAAA,GAA8B,GAAxB,EAAwB;AAAA;;AAAA,MAApBC,GAAoB;AAApBA,IAAAA,GAAoB,GAAd,EAAc;AAAA;;AAAA,MAAVC,IAAU;AAAVA,IAAAA,IAAU,GAAH,CAAG;AAAA;;AAClD,MAAIC,MAAM,GAAGH,GAAG,CAACI,QAAJ,GAAeC,KAAf,CAAqB,GAArB,CAAb;AAEA,MAAIC,GAAG,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUE,KAAV,CAAgB,EAAhB,CAAV;;AACA,MAAI,CAACH,IAAL,EAAW;AACP,WAAOF,GAAP;AACH;;AACD,OAAK,IAAIO,CAAC,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAArB,EAAwBC,CAAC,GAAG,CAAjC,EAAoCF,CAAC,GAAG,CAAxC,EAA2CA,CAAC,IAAIE,CAAC,EAAjD,EAAqD;AACjD,QAAIA,CAAC,IAAIP,IAAT,EAAe;AACXI,MAAAA,GAAG,CAACI,MAAJ,CAAWH,CAAX,EAAc,CAAd,EAAiBN,GAAjB;AACAQ,MAAAA,CAAC,GAAG,CAAJ;AACH;AACJ;;AAED,MAAIN,MAAM,CAAC,CAAD,CAAV,EAAe;AACX,WAAOG,GAAG,CAACK,IAAJ,CAAS,EAAT,IAAe,GAAf,GAAqBR,MAAM,CAAC,CAAD,CAAlC;AACH;;AACD,SAAOG,GAAG,CAACK,IAAJ,CAAS,EAAT,CAAP;AACH;;AAED,IAAMC,MAAM,GAAG;AACXb,EAAAA,cAAc,EAAEA,cADL;AAGXc,EAAAA,WAHW,uBAGCC,KAHD,EAGQ;AACf,WAAOF,MAAM,CAACb,cAAP,CAAsBe,KAAtB,EAA6B,GAA7B,EAAkC,CAAlC,CAAP;AACH,GALU;AAOXC,EAAAA,WAPW,uBAOCD,KAPD,EAOQ;AACf,WAAOF,MAAM,CAACb,cAAP,CAAsBe,KAAtB,EAA6B,GAA7B,EAAkC,CAAlC,CAAP;AACH,GATU;AAWXE,EAAAA,WAXW,uBAWChB,GAXD,EAWMiB,OAXN,EAWmB;AAAA,QAAbA,OAAa;AAAbA,MAAAA,OAAa,GAAH,CAAG;AAAA;;AAC1B,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,GAAG,CAA9B,EAAiCV,CAAC,EAAlC,EAAsC;AAClCW,MAAAA,OAAO,IAAI,GAAX;AACH;;AACD,WAAO,MAAGA,OAAH,GAAalB,GAAb,EAAmBmB,MAAnB,CAA0B,MAAInB,GAAJ,EAAWQ,MAArC,CAAP;AACH;AAjBU,CAAf;AAoBA,eAAeI,MAAf","sourcesContent":["function formatOfSymbol(num = '', syb = '', size = 0) {\r\n    let numArr = num.toString().split('.')\r\n\r\n    let arr = numArr[0].split('');\r\n    if (!size) {\r\n        return num;\r\n    }\r\n    for (var i = arr.length - 1, j = 1; i > 0; i--, j++) {\r\n        if (j >= size) {\r\n            arr.splice(i, 0, syb);\r\n            j = 0;\r\n        }\r\n    }\r\n\r\n    if (numArr[1]) {\r\n        return arr.join('') + '.' + numArr[1]\r\n    }\r\n    return arr.join('')\r\n}\r\n\r\nconst common = {\r\n    formatOfSymbol: formatOfSymbol,\r\n\r\n    formatPhone(value) {\r\n        return common.formatOfSymbol(value, ' ', 4)\r\n    },\r\n\r\n    formatMoney(value) {\r\n        return common.formatOfSymbol(value, ',', 3)\r\n    },\r\n\r\n    padLeftZero(num, zeroLen = 1) {\r\n        let baseStr = '';\r\n        for (let i = 0; i < zeroLen + 1; i++) {\r\n            baseStr += '0';\r\n        }\r\n        return `${baseStr}${num}`.substr((`${num}`).length);\r\n    },\r\n}\r\n\r\nexport default common"],"file":"common.js"}